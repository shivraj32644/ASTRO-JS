---
import classNames from "classnames";
import { normalizeCmsImage } from "../../../utils/common";
import RelatedInsightsRComponents from "../react-blocks/RelatedInsightsRComponents";

const { data } = Astro.props;
const sortedInsights = data?.insights?.data?.sort((a: any, b: any) => {
  if (
    a.attributes?.createdAt &&
    b.attributes?.createdAt &&
    a.attributes?.createdAt < b.attributes?.createdAt
  ) {
    return 1;
  } else if (
    a.attributes?.createdAt &&
    b.attributes?.createdAt &&
    a.attributes?.createdAt > b.attributes?.createdAt
  ) {
    return -1;
  } else {
    return 0;
  }
});

---

<div class="bg-white relative">
  {
    data?.miscellaneousFigure?.map((item: any, index: number) => {
      const figure = normalizeCmsImage(item?.figure);

      return (
        <div
          class={classNames(
            "absolute",
            item?.alignment === "Top-Left" && "top-0 left-0",
            item?.alignment === "Top-Right" && "top-0 right-0",
            item?.alignment === "Bottom-Left" && "bottom-0 left-0",
            item?.alignment === "Bottom-Right" && "bottom-0 right-0",
            item?.alignment === "Center-Left" && "bottom-1/2 left-0",
            item?.alignment === "Center-Right" && "bottom-1/2 right-0"
          )}
        >
          <img
            src={figure?.url}
            alt={figure?.alternativeText}
            class="object-cover w-auto h-auto"
          />
        </div>
      );
    })
  }
  <div class="container mx-auto lg:p-10 p-5">
    <div class="flex lg:flex-row flex-col lg:items-center justify-between">
      <div>
        <h2
          class="font-medium text-lg lg:text-xl lg:leading-8 tracking-[0.02em] text-brand uppercase text-left overflow-hidden before:h-[2px]
           before:bg-brand before:inline-block before:relative before:align-middle
           before:w-6 before:right-2 p-4"
        >
          {data?.heading}
        </h2>
        <h1
          class="font-medium text-2xl lg:text-4xl tracking-[0.02em] text-[#191919] text-left lg:leading-[48px] mb-5 lg:mb-10 max-w-sm lg:max-w-2xl"
        >
          {data?.subHeading}
        </h1>
      </div>
      <a
        href={"/market-insights"}
        rel="noopener noreferrer"
        class="font-medium ml-auto lg:mb-0 mb-3 text-sm text-lightGray group lg:text-base lg:font-semibold hover:text-black bottom flex items-center"
      >
        Explore All
        <span
          class="lg:flex items-center justify-center ml-3 p-2 py-1 font-normal text-white bg-[#C29340] rounded"
        >
          &#10230;
        </span>
      </a>
    </div>
    <!-- <div class="flex w-full max-w-full overflow-x-auto gap-9">
      {
        sortedInsights?.map(
          ({ attributes }: { attributes: any }, index: number) => (
            <div class="cursor-grab min-w-[400px] basis-[400px]">
              <InsightCard data={attributes} />
            </div>
          )
        )
      }
    </div> -->
    <RelatedInsightsRComponents client:load sortedInsights={sortedInsights} />
  </div>
</div>

 
